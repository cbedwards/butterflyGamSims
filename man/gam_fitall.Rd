% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gam_fitall.R
\name{gam_fitall}
\alias{gam_fitall}
\title{Fit multiple time series with multiple gam methods}
\usage{
gam_fitall(timeseries, gam.args)
}
\arguments{
\item{timeseries}{Collection of timeseries, including \verb{$years}, \verb{$doy}, \verb{$count}, and \verb{$sim.id}.
Typically the \verb{$timeseries} output of \code{timeseries_sim()} or \code{timeseries_load()}. If speed is
of particular concern, can pass the trimmed data frame (\code{timeseries_sim()} generates
many more columns.)}

\item{gam.args}{Data frame, each row corresponding to a different set of gam method arguments.
Must include columns \verb{$doy.smooth}, \verb{$doy.knots},\verb{$years.smooth},\verb{$anchor.flag}, \verb{$anchor.dist}.
See \code{gam_fitter()} for details. \verb{$anchor.dist} can be any int when \verb{$anchor.flag==FALSE};
I recommend using a large negative number to make it easy to catch mistakes.}
}
\value{
list of two data frames. \verb{$yearly.estimates} contains the metrics estimated
for each year of each simulation for each gam method (\verb{$sim.id} and \verb{$gam.id}). \verb{$gam.args}
gives the associated gam arguments that map to each gam.id in \verb{$yearly.estimates}.
}
\description{
Each separate timeseries (identified with \verb{$sim.id}) will be fit separately, once for each
gam method. GAM methods are defined with separate rows of the \verb{$gam.args} arguments.
}
\examples{
# path.res = "G:/Dropbox/academia/research projects/butterfly-gam-sims/4_res"
# parms = list(growth.rate = c(1,-1),
#              init.size = 500,
#              act.mean = 130,
#              act.sd = 15)
# timeseries_gen(sim.name = "testsim2",
#                path = path.res,
#                nsims = 5,
#                years = 1990:2000,
#                doy.samples = seq(100,160, by = 10),
#                abund.type = "exp",
#                activity.type = "gauss",
#                sample.type = "pois",
#                sim.parms = parms)
# out = timeseries_load(sim.name = "testsim2",
#                       path = path.res)
# gam.args = data.frame(doy.smooth = c("cc", "cc"),
#                       doy.knots = c(5,3),
#                       years.smooth = c("cr", "cr"),
#                       anchor.flag = c(TRUE, TRUE),
#                       anchor.dist = c(10, 10))
# out.fit = gam_fitall(out$timeseries, gam.args)
# out.fit = gam_fitall_gen(sim.name = "testsim2",
#                          path = path.res,
#                          out$timeseries,
#                          gam.args)
# temp = gam_fitall_load(sim.name = "testsim2",
#                        path = path.res)
}
