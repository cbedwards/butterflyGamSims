% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gam_summarizer.R
\name{gam_summarizer}
\alias{gam_summarizer}
\title{Summarizing activity curve of single year}
\usage{
gam_summarizer(
  count.pred,
  doy.pred,
  bounds.reasonable = c(1, 364),
  bounds.thresh.rel = 1/100,
  bounds.thresh.abs = 1/10
)
}
\arguments{
\item{count.pred}{predicted count data}

\item{doy.pred}{day of year corresponding to count.pred}

\item{bounds.reasonable}{For identifying unreasonable fits, provide the days at which we really SHOULD see ~ 0 abundance.
Defaults to 1 and 364.}

\item{bounds.thresh.rel}{When the activity should be 0, what is "close enough", as a proportion of maximum count?}

\item{bounds.thresh.abs}{When the activity should be 0, what is "close enough" in absolute terms (for cases with flat activity)}
}
\value{
Returns frame with summary information. \code{abund} = abundance index, \code{median} = median,
\code{onset} = 0.1 quantile, \code{end} = 0.9 quantile, \code{fp} = flight period (days between 0.9 and 0.1 quantile).
\code{boundary.reasonable.rel} and \code{boundary.reasonable.abs} will be true if all the provided \code{bounds.reasonable} values
are "sufficiently small" as defined by \code{bounds.thresh.rel} and \code{bounds.thresh.abs}, respectively. See "Details" for more... details.

As a reminder, abundance index is NOT abundance, but is expected to be proportional to it,
with that proportionality constant depending on detectability and lifespan. If those are
generally constant across years, changes in log abundance index across years will be \emph{equal} to changes
in log abundance.
}
\description{
Dev note: potentially this could work across years with judicious use of dplyr \code{group_by} and \code{summarize},
but implementation is non-obvious (to me) for checking reasonable fit using hte "bounds.reasonable" framework.
Revisit for speed if needed, and modify gam_summarize_all accordingly.
}
\details{
In addition to estimating our key metrics (abundance, quantile-based phenology landmarks, flight period),
this function also makes a simple pass at identifying problem fits.
It does this by taking days when we expect abundance to be approximately zero,
and testing whether the nearest doy.pred to those days have abundance that is "low enough". Currently
"low enough" is reasonable.thresh.rel x maximum abundance. We might also consider adding
in an absolute threshold, since "zero" years might be expected to be completely flat.

Note that this was intended to map to the last and first day we expect zero abundance, but
a vector with additional days can be added if that is desired
(ie for bivoltine species with a known period of no abundance between peaks).
}
\examples{

#imagining our fitted curve is Gaussian:
N = 100000
activity.mean = 100; activity.sd =10
out = gam_summarizer(count.pred = 100* dnorm(seq(0,365, length = N),
                                            mean = activity.mean , sd = activity.sd),
                    doy.pred = seq(0,365, length = N))

}
