% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trend_fitter.R
\name{trend_method}
\alias{trend_method}
\title{Calculate trends (and diagnostic metrics) for a given censorship method}
\usage{
trend_method(
  dat.summary,
  nobs.min,
  nnzero.min,
  bound.reasonable.rel = F,
  bound.reasonable.abs = F
)
}
\arguments{
\item{dat.summary}{Data frame with phenology and abundance metrics for any number of years.
Generally just feed in \verb{$summary} component of the results of \code{gam_fitter}.}

\item{nobs.min}{Minimum number of total observations to include a year (REAL observations;
anchors are not counted). This is only relevant if years vary in the number of sampling days}

\item{nnzero.min}{Minimum number of non-zero observations to include a year}

\item{bound.reasonable.rel}{Should we only use years with "good" fits as identified
using bount.reasonable.rel? See \code{gam_summarizer} for details.}

\item{bound.reasonable.abs}{Should we only use years with "good" fits as identified
using bount.reasonable.abs? See \code{gam_summarizer} for details.}
}
\value{
1-row data frame with estimated trends (\code{growth.rate}, \code{median}, \code{onset},
\code{end}, \code{fp}), the number of years used to estimate the trends (\code{nyears}),
the filtering criterion used to censor years before fitting trends (arguments for
this function), and the original number of years before censoring (\code{nyear.original}))
}
\description{
Calculate trends (and diagnostic metrics) for a given censorship method
}
\examples{
set.seed(10)
dat.sim = timeseries_generator(years = 1990:2000,
                               doy.samples = seq(105,160, by = 10),
                               abund.type = "exp",
                               activity.type = "gauss",
                               sample.type = "pois",
                               growth.rate = -0.12,
                               init.size = 100,
                               act.mean = 130,
                               act.sd = 15)
out = gam_fitter(years.vec = dat.sim$years,
                 doy.vec = dat.sim$doy,
                 count.vec = dat.sim$count,
                 doy.smooth = "cr",
                 doy.knots = 5,
                 years.smooth = "cr",
                 anchor.flag = TRUE,
                 anchor.dist = 10
)
fit_plotter(dat.timeseries = dat.sim,
            dat.fitted = out$dat.fitted,
            activity.curve = out$activity.curve,
            xlim = 20)
trend_fitter(out$summary)
trend_method(out$summary,
             nobs.min = 0,
             nnzero.min = 3)
}
