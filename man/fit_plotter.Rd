% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting_functions.R
\name{fit_plotter}
\alias{fit_plotter}
\title{Plotted estimated activity curve from fitted model}
\usage{
fit_plotter(dat.timeseries, dat.fitted, activity.curve, xlim.range = NULL)
}
\arguments{
\item{dat.timeseries}{data frame of the original timeseries. Must contain \verb{$count}, \verb{$doy}, \verb{$year} columns.
Typically this will be the output of \code{timeseries_generator()}.}

\item{dat.fitted}{data frame of the fitted data (which includes anchors). Typically the
\verb{$dat.fitted} list entry of the output of \code{gam_fitter}. Must contain \verb{$count}, \verb{$doy}, \verb{$year} columns.}

\item{activity.curve}{data frame of the fitted activity curve. Typically the \verb{$activity.curve} list
entry of the output of \code{gam_fitter}.
Must contain \verb{$act}, \verb{$doy}, \verb{$year} columns.}

\item{xlim.range}{Detaults to NULL. If given a numeric, will plot from \code{xlim.range} days before
the first doy of of observations from \code{dat.timeseries} to \code{xlim.range} days after the last doy.
Otherwise plot will span 0 to 365 days.}
}
\description{
Plotted estimated activity curve from fitted model
}
\examples{
dat.sim = timeseries_generator(years = 1990:2000,
                               doy.samples = seq(105,160, by = 7),
                               abund.type = "exp",
                               activity.type = "gauss",
                               sample.type = "pois",
                               growth.rate = -0.12,
                               init.size = 500,
                               act.mean = 130,
                               act.sd = 15)
out = gam_fitter(years.vec = dat.sim$years,
                 doy.vec = dat.sim$doy,
                 count.vec = dat.sim$count,
                 doy.smooth = "cr",
                 doy.knots = 5,
                 years.smooth = "cr",
                 anchor.flag = FALSE
)
fit_plotter(dat.timeseries = dat.sim,
            dat.fitted = out$dat.fitted,
            activity.curve = out$activity.curve)
}
