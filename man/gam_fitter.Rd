% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gam_fitter.R
\name{gam_fitter}
\alias{gam_fitter}
\title{Fitting timeseries data with different gam fitting options}
\usage{
gam_fitter(
  years.vec,
  doy.vec,
  count.vec,
  doy.smooth,
  doy.knots,
  years.smooth,
  anchor.flag,
  anchor.dist = NULL
)
}
\arguments{
\item{years.vec}{Vector of the years for analysis, typically the \verb{$years} column of the results of \code{timeseries_generator}.}

\item{doy.vec}{Vector of the doy for analysis, typically the \verb{$doy} column of the results of \code{timeseries_generator}.}

\item{count.vec}{Vector of the counts for analysis, typically the \verb{$count} column of the results of \code{timeseries_generator}.}

\item{doy.smooth}{What smoothing approach to use for the doy direction. Reasonable options to try include a cyclic spline (\code{"cc"}),
and cubic regression spline (\code{"cr"}). While thin plate regressions are powerful in unvariate cases,
for tensor product smooths as used here, they offer no advantage over cubic spliens (per \code{?mgcv::gam}, after \code{te}, \code{ti}, and \code{t2} are defined)
when choosing cubic regression splines, \code{gam_fitter} will add two bonus knots on day 0.5 and 364.5 so that the function wraps appropriately.
Shrinkage cubic regression splines (\code{"cs"}) are another possible approach, but likely to be suboptimal.
The shrinkage will tend to draw regions of low data density towards zero. This is good for
preventing unreasonable behavior outside the bounds of the data, but will tend to bias
estimated abundance downward, especially in years of low data.}

\item{doy.knots}{How many knots to use in the doy dimension? Not used (or not used normally?) for thin plate regression.}

\item{years.smooth}{What smoothing approach to use for the year direction. Reasonable options include cubic regression (\code{"cr"}), and random effect (\code{"re"}).
For cubic regression, \code{gam_fitter} uses a knot for
each year. Because of the shrinkage associated with random effects, using \code{year.smooth == "re"} is likely
to underestimate negative or positive trends in abundance across years (but this can be tested!).}

\item{anchor.flag}{Logical. Should add "anchor" zeroes (additional dummy observations with 0 counts) be added to each
year of data to help prevent unreasonable behavior outside of observed range. If TRUE, two additional observations are added
to each year, \code{anchor.dist} days before the first doy of observation in the data set, and
\code{anchor.dist} days after the last doy of observation in the data set.
some number of days before and after}

\item{anchor.dist}{How many days out from the real data should anchor zeroes be added? Defaults to NULL,
must be an integer if \code{anchor.dist==TRUE}.}
}
\value{
List with four components. \verb{$summary} is a data frame frame with estimated attributes for
each fitted year. See \code{gam_summarizer()} for details on most columns. Two additional columns are added.
\verb{$nzeros} is the number of 0 counts for each year, EXCLUDING ANCHORS (if relevant). \verb{$n} is the number of
observations in each year, again excluding anchors (if relevant). Currently \code{gam_fitter()} is estimating
phenology and abundance metrics using a resolution of 2.4 hours (ie increments of 0.1 doy).
\verb{$dat.fitted} is the data frame that was used for fitting, including any additional anchor days added.
\verb{$activity.curve} is the activity curve predicted by the fitted model, provided in 2.4 hour increments for each year.
\verb{$model} is the fitted mgcv model, and can be used to create plots of estimated activity curves, etc.
\verb{$parms} is the fitting parameters provided (the arguments except for the initial three vectors).
}
\description{
Fitting timeseries data with different gam fitting options
}
\details{
\code{gam_fitter} fits the data using a tensor product smooth, with potentially different basis functions
for the doy and year dimensions. Fitting uses restricted maximum likelihood (\code{methods = "REML"} in \code{gam()}) and
a negative binomial distribution (\code{family = "nb"} in \code{gam()}).
}
\examples{
dat.sim = timeseries_generator(years = 1990:2000,
                               doy.samples = seq(105,160, by = 7),
                               abund.type = "exp",
                               activity.type = "gauss",
                               sample.type = "pois",
                               growth.rate = -0.12,
                               init.size = 500,
                               act.mean = 130,
                               act.sd = 15)
out = gam_fitter(years.vec = dat.sim$years,
                 doy.vec = dat.sim$doy,
                 count.vec = dat.sim$count,
                 doy.smooth = "cr",
                 doy.knots = 5,
                 years.smooth = "cr",
                 anchor.flag = FALSE
)
}
